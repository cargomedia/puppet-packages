[general]
; Port range for automatic port generation
minport=<%= @minport %>
maxport=<%= @maxport %>

; Source bitrate averaging interval, seconds
source_avg_time=<%= @source_avg_time %>
; Watcher REMB averageing interval, seconds
remb_avg_time=<%= @remb_avg_time %>
; Switching interval, seconds
switching_delay=<%= @switching_delay %>

; Session streams status update interval, seconds
session_info_update_time=<%= @session_info_update_time %>

; Log error if keyframe is not found within this amount of frames
keyframe_distance_alert=<%= @keyframe_distance_alert %>

; NOTE: all paths should exist beforehead

; Path for job JSONs
job_path=<%= @jobs_path_final %>

; prinf pattern for job filenames (.json is auto)
; Short usage, the following gets substituted:
; #{time}     is timestamp (guint64)
; #{rand}     is random integer (guin32)
; #{md5}      is md5 of (timestamp + plugin name + random integer)
; #{plugin}   is plugin name ("janus.plugin.cm.rtpbroadcast")
job_pattern=<%= @job_pattern %>

; Enable auto recording and thumbnailing
recording_enabled=<%= @recording_enabled ? 'yes' : 'no' %>

; Path for recording and thumbnailing
archive_path=<%= @archive_path %>

; printf pattern for recordings filenames
; Short usage, the following gets substituted:
; #{id}       is streamChannelKey (string)
; #{time}     is timestamp (guint64)
; #{type}     is type ("audio", "video" or "thumb" string)
recording_pattern=<%= @recording_pattern %>

; Same for thumbnails
thumbnailing_pattern=<%= @thumbnailing_pattern %>

; Thumbnailing interval in seconds
thumbnailing_interval=<%= @thumbnailing_interval %>

; Thumbnailing duration in seconds
thumbnailing_duration=<%= @thumbnailing_duration %>
